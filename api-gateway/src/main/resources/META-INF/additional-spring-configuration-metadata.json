{
  "properties": [
    {
      "name": "gateway.routes",
      "type": "java.util.Map<java.lang.String, com.ejada.gateway.config.GatewayRoutesProperties$ServiceRoute>",
      "description": "Declarative route definitions exposed through the API gateway."
    },
    {
      "name": "gateway.routes.*.lb-strategy",
      "type": "java.lang.String",
      "description": "Load balancing strategy for a route (default or weighted-response-time)."
    },
    {
      "name": "gateway.webclient.connect-timeout",
      "type": "java.time.Duration",
      "description": "Connection timeout applied to downstream WebClient calls."
    },
    {
      "name": "gateway.webclient.response-timeout",
      "type": "java.time.Duration",
      "description": "Overall response timeout for downstream WebClient calls."
    },
    {
      "name": "gateway.subscription.validation-uri",
      "type": "java.lang.String",
      "description": "URI template used to validate tenant subscriptions before routing."
    },
    {
      "name": "gateway.admin.aggregation.services",
      "type": "java.util.List<com.ejada.gateway.config.AdminAggregationProperties$Service>",
      "description": "Downstream admin services aggregated into the admin dashboard endpoints."
    },
    {
      "name": "app.configuration-version",
      "type": "java.lang.Long",
      "description": "Monotonically increasing identifier representing the currently active configuration snapshot."
    },
    {
      "name": "jasypt.encryptor.password",
      "type": "java.lang.String",
      "description": "Password used by Jasypt to decrypt ENC(...) values provided by the Config Server."
    },
    {
      "name": "jasypt.encryptor.algorithm",
      "type": "java.lang.String",
      "description": "Encryption algorithm applied to secrets decrypted by the API gateway."
    },
    {
      "name": "jasypt.encryptor.key-obtention-iterations",
      "type": "java.lang.Integer",
      "description": "Number of key stretching iterations applied by the encryptor."
    },
    {
      "name": "jasypt.encryptor.pool-size",
      "type": "java.lang.Integer",
      "description": "Size of the encryptor pool used to decrypt secrets concurrently."
    },
    {
      "name": "jasypt.encryptor.provider-name",
      "type": "java.lang.String",
      "description": "Security provider used when initialising the encryptor (for example SunJCE)."
    },
    {
      "name": "jasypt.encryptor.salt-generator-classname",
      "type": "java.lang.String",
      "description": "Fully qualified class name of the salt generator implementation."
    },
    {
      "name": "jasypt.encryptor.iv-generator-classname",
      "type": "java.lang.String",
      "description": "Fully qualified class name of the IV generator implementation."
    },
    {
      "name": "jasypt.encryptor.string-output-type",
      "type": "java.lang.String",
      "description": "Encoding applied to decrypted strings (for example base64)."
    },
    {
      "name": "jasypt.encryptor.fail-on-missing-password",
      "type": "java.lang.Boolean",
      "description": "Whether the gateway should fail fast when the Jasypt password is missing.",
      "defaultValue": true
    }
  ]
}
