server:
  port: ${SERVER_PORT:8000}
  shutdown: graceful

spring:
  # Import remote configuration first, allowing local overrides via active profiles.
  config:
    import: optional:configserver:${spring.cloud.config.uri:${SPRING_CLOUD_CONFIG_URI:http://config-server:8888}}
  application:
    name: api-gateway
    admin:
      enabled: true
  main:
    lazy-initialization: true
    web-application-type: reactive
  output:
    ansi:
      enabled: ALWAYS
  boot:
    startup: info
  data:
    redis:
      repositories:
        enabled: false
  autoconfigure:
    exclude:
      - com.ejada.shared_starter_ratelimit.RateLimitAutoConfiguration
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${GATEWAY_JWK_SET_URI:}
          issuer-uri: ${GATEWAY_ISSUER_URI:}
  kafka:
    listener:
      concurrency: 2
      auto-startup: false
  cloud:
    config:
      enabled: ${SPRING_CLOUD_CONFIG_ENABLED:true}
      uri: ${SPRING_CLOUD_CONFIG_URI:http://config-server:8888}
      profile: ${SPRING_CLOUD_CONFIG_PROFILE:${SPRING_PROFILES_ACTIVE:local}}
      label: ${SPRING_CLOUD_CONFIG_LABEL:main}
      username: ${SPRING_CLOUD_CONFIG_USERNAME:}
      password: ${SPRING_CLOUD_CONFIG_PASSWORD:}
      fail-fast: ${SPRING_CLOUD_CONFIG_FAIL_FAST:false}
  r2dbc:
    url: ${SPRING_R2DBC_URL:${GATEWAY_R2DBC_URL:r2dbc:postgresql://postgres:5432/lms}}
    username: ${SPRING_R2DBC_USERNAME:${GATEWAY_R2DBC_USERNAME:postgres}}
    password: ${SPRING_R2DBC_PASSWORD:${GATEWAY_R2DBC_PASSWORD:postgres}}
  sql:
    init:
      mode: ${SPRING_SQL_INIT_MODE:never}
      schema-locations: classpath:schema.sql
    compatibility-verifier:
      enabled: false
    gateway:
      x-forwarded:
        enabled: true
        for-enabled: true
        proto-enabled: true
        host-enabled: true
        port-enabled: true
      metrics:
        enabled: true
        tags:
          - tenantId
          - routeId
      httpclient:
        connect-timeout: 5000
        response-timeout: 15s
        pool:
          name: gateway-pool
          type: elastic
          max-idle-time: 60s
          evict-in-background: 30s
      redis-rate-limiter:
        include-headers: true
      default-filters:
        - name: RequestSize
          args:
            maxSize: 10MB
        - name: SaveSession
        - name: AddRequestHeader
          args:
            name: X-Gateway-Trace
            value: "#{T(java.util.UUID).randomUUID()}"
      discovery:
        locator:
          enabled: false
      routes: []
    loadbalancer:
      client:
        name: ${SPRING_CLOUD_LOADBALANCER_CLIENT_NAME:${spring.application.name}}
      retry:
        enabled: true
      sticky-session:
        enabled: true
        add-service-instance-cookie: true
        cookie-name: LMS-AFFINITY
    kubernetes:
      enabled: ${SPRING_CLOUD_KUBERNETES_ENABLED:false}
      discovery:
        enabled: ${SPRING_CLOUD_KUBERNETES_DISCOVERY_ENABLED:${spring.cloud.kubernetes.enabled}}
        all-namespaces: false
        include-not-ready-addresses: false
        wait-cache-ready: true
        cache-loading-timeout-seconds: 30
        namespaces:
          - ${SPRING_CLOUD_KUBERNETES_DISCOVERY_NAMESPACE:${KUBERNETES_NAMESPACE:}}
        metadata:
          add-pod-labels: true
          add-pod-annotations: true
      loadbalancer:
        enabled: ${SPRING_CLOUD_KUBERNETES_LOADBALANCER_ENABLED:${spring.cloud.kubernetes.enabled}}
        mode: POD
      reload:
        enabled: true
        mode: event
        monitoring-config-maps: true
        monitoring-secrets: true

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,env,configprops,gateway,refresh
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
    metrics:
      enabled: true
    gateway:
      enabled: true
  tracing:
    sampling:
      probability: 1.0
  otlp:
    tracing:
      endpoint: ${OTEL_EXPORTER_OTLP_ENDPOINT:http://otel-collector:4317}
  metrics:
    tags:
      application: ${spring.application.name}
      region: ${GCP_REGION:unknown}

shared:
  patterns:
    docs:
      api-v3-wildcard: &pattern-docs-api-v3 /api/**/v3/api-docs/**
      api-swagger-wildcard: &pattern-docs-api-swagger /api/**/swagger-ui/**
      api-swagger-html: &pattern-docs-api-swagger-html /api/**/swagger-ui.html
      root-v3: &pattern-docs-root-v3 /v3/api-docs/**
      root-swagger: &pattern-docs-root-swagger /swagger-ui/**
      root-swagger-html: &pattern-docs-root-swagger-html /swagger-ui.html
  security:
    resource-server:
      enabled: false
      allowed-origins:
        - https://lms.example.com
        - https://admin.lms.example.com
      permit-all:
        - /actuator/health/**
        - /actuator/info
        - /actuator/prometheus
        - *pattern-docs-api-v3
        - *pattern-docs-api-swagger
        - *pattern-docs-api-swagger-html
        - *pattern-docs-root-v3
        - *pattern-docs-root-swagger
        - *pattern-docs-root-swagger-html
      disable-csrf: true
      jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.jwk-set-uri}
      issuer-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}
    cors:
      allow-credentials: false
      max-age: 3600
  core:
    tenant:
      enabled: true
      header-name: X-Tenant-Id
      query-param: tenantId
      resolve-from-jwt: true
      jwt-claim-names:
        - tenant_id
        - tid
      prefer-header-over-jwt: true
      skip-patterns:
        - /actuator/**
        - /favicon.ico
        - /api/**/v3/api-docs/**
        - /api/**/swagger-ui/**
        - /api/**/swagger-ui.html
        - /v3/api-docs/**
        - /swagger-ui/**
        - /swagger-ui.html
    correlation:
      enabled: true
      header-name: X-Correlation-Id
      echo-response-header: true
      generate-if-missing: true
      skip-patterns:
        - /actuator/**
  observability:
    application-name: ${spring.application.name}
  ratelimit:
    enabled: true
    capacity: 200
    window: 1m
    key-strategy: tenant

resilience4j:
  circuitbreaker:
    configs:
      default:
        sliding-window-size: 50
        minimum-number-of-calls: 20
        failure-rate-threshold: 50
        slow-call-rate-threshold: 50
        slow-call-duration-threshold: 2s
        wait-duration-in-open-state: 30s
        permitted-number-of-calls-in-half-open-state: 5
        automatic-transition-from-open-to-half-open-enabled: true
      critical:
        sliding-window-size: 30
        minimum-number-of-calls: 15
        failure-rate-threshold: 30
        slow-call-rate-threshold: 50
        slow-call-duration-threshold: 3s
        wait-duration-in-open-state: 10s
        permitted-number-of-calls-in-half-open-state: 3
        automatic-transition-from-open-to-half-open-enabled: true
      non-critical:
        sliding-window-size: 60
        minimum-number-of-calls: 25
        failure-rate-threshold: 50
        slow-call-rate-threshold: 70
        slow-call-duration-threshold: 3s
        wait-duration-in-open-state: 30s
        permitted-number-of-calls-in-half-open-state: 6
        automatic-transition-from-open-to-half-open-enabled: true
    instances:
      tenant-service-cb:
        base-config: critical
      catalog-service-cb:
        base-config: non-critical
      subscription-service:
        base-config: critical
      billing-service:
        base-config: critical
      setup-service:
        base-config: non-critical
      policy-service:
        base-config: non-critical
      tenant-service-canary:
        base-config: non-critical
  retry:
    configs:
      default:
        max-attempts: 3
        wait-duration: 200ms
        enable-exponential-backoff: true
        exponential-backoff-multiplier: 2
        retry-exceptions:
          - java.io.IOException
          - org.springframework.web.reactive.function.client.WebClientResponseException
    instances:
      catalog-service:
        base-config: default
      policy-service:
        base-config: default
      tenant-service:
        base-config: default
  bulkhead:
    configs:
      default:
        max-concurrent-calls: 50
        max-wait-duration: 1s
    instances:
      tenant-service:
        base-config: default
      policy-service:
        base-config: default

# Declarative downstream routes consumed by GatewayRoutesConfiguration
gateway:
  internal:
    api-key: ${GATEWAY_INTERNAL_API_KEY:${SHARED_SECURITY_INTERNAL_CLIENT_API_KEY:local-dev-internal-key}}
  versioning:
    enabled: true
    compatibility:
      matrix:
        v2:
          - v1
    mappings:
      - id: tenant-api
        description: Normalize legacy tenant endpoints to v2 implementations
        default-version: v2
        legacy-paths:
          - /v1/tenants/{*remaining}
          - /api/v1/tenants/{*remaining}
        routes:
          - version: v1
            target-version: v2
            rewrite-path: /v2/tenants/{remaining}
            weight: 90
            deprecated: true
            warning: "Tenant API v1 is deprecated and will be removed. Use Accept-Version: v2."
            sunset: 2024-12-31T00:00:00Z
            policy-link: https://docs.example.com/tenant-api-deprecation
            compatibility:
              - v1
              - v2
            additional-headers:
              X-Gateway-Track: primary
          - version: v1
            target-version: v2
            rewrite-path: /v2/tenants/{remaining}
            weight: 10
            deprecated: true
            warning: Tenant API v1 is being migrated to v2 rollout track.
            sunset: 2024-12-31T00:00:00Z
            documentation-group: tenant-api-v2-canary
            additional-headers:
              X-Gateway-Track: canary
          - version: v2
            rewrite-path: /v2/tenants/{remaining}
            weight: 100
            compatibility:
              - v2
            documentation-group: tenant-api-v2
  logging:
    access-log:
      enabled: true
      skip-patterns:
        - /actuator/**
        - /health
  cache:
    enabled: true
    warm-interval: 10m
    warm-on-startup: false
    warm-tenants:
      - demo
    topics:
      tenant-updated: tenant.updated
      catalog-plan-updated: catalog.plan.updated
    kafka:
      group-id: gateway-cache
    routes:
      - id: catalog-plans
        route-id: catalog-service
        method: GET
        path: /api/v1/catalog/plans
        ttl: 1h
        stale-ttl: 30m
        warm: true
        tenant-scoped: true
        client:
          authorization: ${GATEWAY_CACHE_CATALOG_AUTHORIZATION:}
          api-key: ${GATEWAY_CACHE_CATALOG_API_KEY:}
          timeout: ${GATEWAY_CACHE_CLIENT_TIMEOUT:10s}
          headers:
            X-Internal-Request: "true"
      - id: catalog-features
        route-id: catalog-service
        method: GET
        path: /api/v1/catalog/features
        ttl: 30m
        stale-ttl: 15m
        warm: true
        tenant-scoped: true
        client:
          authorization: ${GATEWAY_CACHE_CATALOG_AUTHORIZATION:}
          api-key: ${GATEWAY_CACHE_CATALOG_API_KEY:}
          timeout: ${GATEWAY_CACHE_CLIENT_TIMEOUT:10s}
          headers:
            X-Internal-Request: "true"
      - id: tenant-by-id
        route-id: tenant-service
        method: GET
        path: /api/v1/tenants/{id}
        ttl: 5m
        stale-ttl: 5m
        warm: false
        tenant-scoped: true
  tracing:
    enhanced-tags:
      enabled: true
  bff:
    dashboard:
      tenant-service-uri: lb://tenant-service
  security:
    signature-validation:
      enabled: false
      skip-patterns:
        - /public/**
        - /actuator/**
        - /auth/**
    api-key:
      enabled: true
      encryption:
        enabled: true
        algorithm: AES-256-GCM
        key-id: default
        key-value: ${GATEWAY_API_KEY_ENCRYPTION_KEY:}
      rotation:
        enabled: true
        max-age-days: 90
      scope-enforcement:
        enabled: true
        require-exact-match: false
      audit:
        log-usage: true
        track-last-used: true
    token-cache:
      enabled: false
      ttl: 15m
    ip-filtering:
      enabled: false
      analytics-service-uri: lb://analytics-service
      billing-service-uri: lb://billing-service
      default-period: MONTHLY
  defaults:
    routes:
      tenant-service: &tenant-route-base
        uri: lb://tenant-service
        paths:
          - /api/v1/tenants/**
          - /api/tenants/**
          - /api/tenant/**
        strip-prefix: 1
        versioning: &tenant-versioning-base
          enabled: true
          default-version: v1
          supported-versions:
            - v1
        session-affinity:
          enabled: true
          cookie-name: LMS-TENANT-AFFINITY
          header-name: X-Tenant-Affinity
    resilience:
      enabled: true
      fallback-uri: forward:/fallback/default
      fallback-status: SERVICE_UNAVAILABLE
      priority: NON_CRITICAL
      retry:
        enabled: true
        retries: 2
        methods:
          - GET
        statuses:
          - BAD_GATEWAY
          - SERVICE_UNAVAILABLE
        backoff:
          enabled: true
          first-backoff: 100ms
          max-backoff: 2s
          factor: 2
          based-on-previous-value: true
  subscription:
    enabled: true
    validation-uri: lb://subscription-service/internal/subscriptions/{tenantId}
    cache-ttl: 5m
    fail-open: true
    validate-all-routes: true
    skip-patterns:
      - /actuator/**
      - /fallback/**
      - /api/**/swagger-ui/**
      - /api/**/v3/api-docs/**
      - /swagger-ui/**
      - /v3/api-docs/**
    required-features:
      catalog-service: catalog.read
      billing-service: billing.manage
      subscription-service: subscription.manage
      policy-service: policy.manage
  webclient:
    connect-timeout: 3s
    response-timeout: 15s
    read-timeout: 10s
    write-timeout: 10s
    max-in-memory-size: 5242880
  routes:
    setup:
      id: setup-service
      uri: lb://setup-service
      paths:
        - /api/setup/**
      strip-prefix: 2
      prefix-path: /core
      resilience:
        enabled: true
        circuit-breaker-name: setup-service
        fallback-uri: forward:/fallback/setup-service
        priority: NON_CRITICAL
    tenant:
      <<: *tenant-route-base
      id: tenant-service
      versioning:
        <<: *tenant-versioning-base
        fallback-to-default: true
        propagate-header: true
      weight:
        enabled: true
        group: tenant-service
        value: 90
      request-headers:
        X-Gateway-Track: primary
      resilience:
        enabled: true
        circuit-breaker-name: tenant-service-cb
        fallback-uri: forward:/fallback/tenant-service
        fallback-on-methods:
          - GET
        priority: CRITICAL
    tenant-canary:
      <<: *tenant-route-base
      id: tenant-service-canary
      weight:
        enabled: true
        group: tenant-service
        value: 10
      request-headers:
        X-Gateway-Track: canary
      resilience:
        enabled: true
        circuit-breaker-name: tenant-service-canary
        fallback-uri: forward:/fallback/tenant-service
        fallback-on-methods:
          - GET
        priority: NON_CRITICAL
    catalog:
      id: catalog-service
      uri: lb://catalog-service
      paths:
        - /api/v1/catalog/**
        - /api/catalog/**
      strip-prefix: 1
      versioning:
        enabled: true
        default-version: v1
        supported-versions:
          - v1
      resilience:
        enabled: true
        circuit-breaker-name: catalog-service-cb
        fallback-uri: forward:/fallback/catalog-service
        fallback-status: OK
        fallback-message: Catalog service is currently unavailable. Please retry shortly.
        priority: NON_CRITICAL
        retry:
          enabled: true
          retries: 3
          methods:
            - GET
          statuses:
            - 500
            - BAD_GATEWAY
          series:
            - SERVER_ERROR
          backoff:
            enabled: true
            first-backoff: 100ms
            max-backoff: 3s
            factor: 1.5
            based-on-previous-value: true
    subscription:
      id: subscription-service
      uri: lb://subscription-service
      paths:
        - /api/v1/subscriptions/**
        - /api/subscriptions/**
        - /api/subscription/**
      strip-prefix: 1
      versioning:
        enabled: true
        default-version: v1
        supported-versions:
          - v1
      resilience:
        enabled: true
        circuit-breaker-name: subscription-service
        fallback-uri: forward:/fallback/subscription-service
        fallback-status: OK
        fallback-message: Subscription service unavailable. Serving stale subscription snapshot.
        priority: CRITICAL
    billing:
      id: billing-service
      uri: lb://billing-service
      paths:
        - /api/v1/billing/**
        - /api/billing/**
      strip-prefix: 1
      versioning:
        enabled: true
        default-version: v1
        supported-versions:
          - v1
      resilience:
        enabled: true
        circuit-breaker-name: billing-service
        fallback-uri: forward:/fallback/billing-service
        fallback-status: ACCEPTED
        fallback-message: Billing service is unavailable. Usage event queued for later processing.
        priority: CRITICAL
    security-auth:
      id: security-service
      uri: lb://security-service
      paths:
        - /api/auth/**
      strip-prefix: 1
      prefix-path: /sec/api/v1
      request-headers:
        X-Route-Source: static
      resilience:
        enabled: true
        circuit-breaker-name: security-service
        fallback-uri: forward:/fallback/security-service
        fallback-message: Authentication service is temporarily unavailable. Please retry shortly.
        priority: CRITICAL
    policy:
      id: policy-service
      uri: lb://policy-service
      paths:
        - /api/v1/policies/**
        - /api/policies/**
      strip-prefix: 1
      versioning:
        enabled: true
        default-version: v1
        supported-versions:
          - v1
      resilience:
        enabled: true
        circuit-breaker-name: policy-service
        fallback-uri: forward:/fallback/default
        priority: NON_CRITICAL
  admin:
    aggregation:
      timeout: 3s
      services:
        - id: tenant-service
          uri: lb://tenant-service
          health-path: /actuator/health
          required: true
          deployment: primary
        - id: tenant-service-canary
          uri: lb://tenant-service
          health-path: /actuator/health
          required: false
          deployment: canary
          headers:
            X-Gateway-Track: canary
        - id: catalog-service
          uri: lb://catalog-service
          health-path: /actuator/health
          required: true
          deployment: primary
        - id: subscription-service
          uri: lb://subscription-service
          health-path: /actuator/health
          required: true
          deployment: primary
        - id: billing-service
          uri: lb://billing-service
          health-path: /actuator/health
          required: true
          deployment: primary
        - id: policy-service
          uri: lb://policy-service
          health-path: /actuator/health
          required: true
          deployment: primary

# Application metadata that surfaces through /actuator/info and diagnostics endpoints.
app:
  env: ${APP_ENV:${SPRING_PROFILES_ACTIVE:local}}
  version: ${APP_VERSION:1.0.0}
  configuration-version: ${APP_CONFIGURATION_VERSION:${app.configuration-version:1}}

# Encryption support for secrets served by the Config Server (ENC(...) syntax).
jasypt:
  encryptor:
    # Always resolve the encryptor password from the environment to avoid
    # accidentally creating a circular placeholder when default values are
    # expanded by the shell or the container runtime.
    password: ${JASYPT_ENCRYPTOR_PASSWORD}
    algorithm: PBEWITHHMACSHA512ANDAES_256
    key-obtention-iterations: 1000
    pool-size: 1
    provider-name: SunJCE
    salt-generator-classname: org.jasypt.salt.RandomSaltGenerator
    iv-generator-classname: org.jasypt.iv.RandomIvGenerator
    string-output-type: base64
    fail-on-missing-password: ${JASYPT_ENCRYPTOR_FAIL_ON_MISSING_PASSWORD:true}
    property:
      prefix: ENC(
      suffix: )

logging:
  level:
    root: INFO
    com.ejada.gateway: DEBUG
  pattern:
    level: "%5p [${spring.application.name},trace=%X{traceId:-},span=%X{spanId:-},tenant=%X{tenantId:-}]"

reactor:
  context-propagation: auto
  netty:
    ioWorkerCount: ${REACTOR_NETTY_IO_WORKERS:0}

