spring:
  config:
    import:
      - classpath:application-shared-api-gateway.yaml
  datasource:
    url: "${DB_URL:jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:lms}?currentSchema=security}"
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
    hikari:
      pool-name: HikariPool-ejada
      maximum-pool-size: 10
      minimum-idle: 2
      idle-timeout: 30000        # 30s
      connection-timeout: 300000 # 300s
      max-lifetime: 1800000      # 30m
  jpa:
    open-in-view: false
    show-sql: true
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        ddl-auto: none
        default_schema: security
        hbm2ddl.create_namespaces: true
        format_sql: true
      jdbc.time_zone: UTC
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration/common,classpath:db/migration/{vendor}
  kafka:
    client-id: ejada-security-dev
    consumer:
      group-id: ejada-backend-dev

shared:
  core:
    tenant:
      enabled: true
      header-name: x_tenant_id
      query-param: tenantId
      default-policy: OPTIONAL
      echo-response-header: true
  headers:
    tenant:
      header: x_tenant_id
      auto-generate: false
      mandatory: false
    propagation:
      include:
        - X-Correlation-Id
        - X-Request-ID
        - x_tenant_id
        - X-User-Id
  audit:
    sinks:
      db:
        schema: security
      outbox:
        enabled: true
  openapi:
    enabled: true
    title: " security Service API"
    description: "security service endpoints for tenant/platform configuration."
    version: "1.0.0"
    servers:
      - http://localhost:8080/core
    group:
      name: security
      packages-to-scan:
        - com.ejada.security
    jwt-security: false
  redis:
    key-prefix: security
  crypto:
    algorithm: AES_GCM
    in-memory:
      activeKid: ${CRYPTO_ACTIVE_KID:local-dev-key}
      keys:
        local-dev-key: ${CRYPTO_LOCAL_DEV_KEY:4J8bfqUaEqzJCQakoJPM3w==}
  security:
    jwt:
      secret: ${JWT_SECRET:7h1aH9UllV2E7Yka4P6s2F+1Vn6V5w9zIXhmJ5aB1kA=}
    hs256:
      secret: ${JWT_SECRET:7h1aH9UllV2E7Yka4P6s2F+1Vn6V5w9zIXhmJ5aB1kA=}
    resource-server:
      permit-all:
        - "/**"

logging:
  level:
    root: WARN
    com.ejada: WARN
    com.ejada.audit.starter: WARN
    com.ejada.audit.starter.core.dispatch: WARN
    com.ejada.audit.starter.core.dispatch.sinks: WARN
    org.hibernate.tool.schema: WARN
    org.hibernate.SQL: WARN
    org.hibernate.orm.jdbc.bind: WARN
    org.springframework.cache: WARN
    org.springframework.cache.interceptor.CacheAspectSupport: WARN

debug: true
