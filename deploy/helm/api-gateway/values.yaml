replicaCount: 3
image:
  repository: ghcr.io/ejada/api-gateway
  tag: "latest"
  pullPolicy: IfNotPresent
imagePullSecrets: []
serviceAccount:
  create: true
  name: ""
  annotations: {}
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "8080"
podLabels: {}
podSecurityContext: {}
securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  allowPrivilegeEscalation: false
  seccompProfile:
    type: RuntimeDefault
  capabilities:
    drop:
      - ALL
service:
  type: ClusterIP
  port: 80
  targetPort: 8080
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
resources:
  requests:
    cpu: 500m
    memory: 1Gi
  limits:
    cpu: 1000m
    memory: 2Gi
nodeSelector: {}
tolerations: []
affinity: {}
env: []
config:
  drEnabled: true
  optimizationEnabled: true
  backupRegions:
    - eu-west1
    - us-central1
  samplingProbability: 0.01
  warmupTenants: []
  canaryWeight: 10
livenessProbe:
  path: /actuator/health/liveness
  port: 8080
  initialDelaySeconds: 30
  periodSeconds: 15
  timeoutSeconds: 2
  failureThreshold: 3
readinessProbe:
  path: /actuator/health/readiness
  port: 8080
  initialDelaySeconds: 20
  periodSeconds: 10
  timeoutSeconds: 2
  failureThreshold: 3
hpa:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 60
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 70
pdb:
  enabled: true
  minAvailable: 2
serviceMonitor:
  enabled: true
  interval: 30s
  scrapeTimeout: 10s
  additionalLabels: {}
networkPolicy:
  enabled: true
  allowedNamespaces:
    - monitoring
    - logging
rbac:
  enabled: true
  rules:
    - apiGroups: [""]
      resources: ["configmaps", "secrets"]
      verbs: ["get", "list", "watch"]
    - apiGroups: ["coordination.k8s.io"]
      resources: ["leases"]
      verbs: ["get", "list", "watch", "create", "update", "patch"]
extraVolumes: []
extraVolumeMounts: []
podDisruptionBudget: {}
