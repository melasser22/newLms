apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "redis-sentinel.fullname" . }}
  labels:
    {{- include "redis-sentinel.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "redis-sentinel.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "redis-sentinel.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "redis-sentinel.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: redis
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 6379
              name: redis
          env:
            - name: REDIS_REPLICATION_MODE
              value: master
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "redis-sentinel.fullname" . }}-auth
                  key: redis-password
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /bitnami/redis/data
        - name: sentinel
          image: "{{ .Values.sentinel.image.repository }}:{{ .Values.sentinel.image.tag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: {{ .Values.sentinel.port }}
              name: sentinel
          env:
            - name: REDIS_MASTER_HOST
              value: {{ include "redis-sentinel.fullname" . }}-headless
            - name: REDIS_MASTER_PORT_NUMBER
              value: "6379"
            - name: REDIS_SENTINEL_QUORUM
              value: "{{ .Values.sentinel.quorum }}"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "redis-sentinel.fullname" . }}-auth
                  key: redis-password
      securityContext:
        fsGroup: 1001
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
        storageClassName: {{ .Values.persistence.storageClass }}
